#!/bin/sh

UPSTREAM=${1:-'@{u}'}
LOCAL=$(git rev-parse @)
REMOTE=$(git rev-parse "$UPSTREAM")
BASE=$(git merge-base @ "$UPSTREAM")

LOCAL_BRANCH=$(git rev-parse --abbrev-ref HEAD)
REMOTE_BRANCH=$(git rev-parse --abbrev-ref @{upstream})

if [ $LOCAL = $REMOTE ]; then
    echo "$LOCAL_BRANCH is up-to-date with $REMOTE_BRANCH, nothing to review"
	exit 0
fi

set -- $(git rev-list --left-right --count $LOCAL_BRANCH...$REMOTE_BRANCH)
behind=$2
ahead=$1

behind_ending=
if [[ $behind -ne 1 ]]; then
	behind_ending=s
fi
ahead_ending=
if [[ $ahead -ne 1 ]]; then
	ahead_ending=s
fi

if [ $LOCAL = $BASE ]; then
    echo "$LOCAL_BRANCH is $behind commit$behind_ending behind $REMOTE_BRANCH, pull will fast-forward, reviewing incoming changes"
elif [ $REMOTE = $BASE ]; then
    echo "$LOCAL_BRANCH is $ahead commit$ahead_ending ahead of $REMOTE_BRANCH, reviewing outgoing changes"
else
    echo "$LOCAL_BRANCH is $ahead commit$ahead_ending ahead of and $behind commit$behind_ending behind $REMOTE_BRANCH, a merge is required, reviewing differences"
fi

git difftool -d $REMOTE_BRANCH $LOCAL_BRANCH
